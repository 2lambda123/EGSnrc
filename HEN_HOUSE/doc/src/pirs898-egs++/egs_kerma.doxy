/*
###############################################################################
#
#  EGSnrc egs++ egs_kerma application documentation
#  Copyright (C) 2019 National Research Council Canada
#
#  This file is part of EGSnrc.
#
#  EGSnrc is free software: you can redistribute it and/or modify it under
#  the terms of the GNU Affero General Public License as published by the
#  Free Software Foundation, either version 3 of the License, or (at your
#  option) any later version.
#
#  EGSnrc is distributed in the hope that it will be useful, but WITHOUT ANY
#  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
#  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for
#  more details.
#
#  You should have received a copy of the GNU Affero General Public License
#  along with EGSnrc. If not, see <http://www.gnu.org/licenses/>.
#
###############################################################################
#
#  Author:          Ernesto Mainegra-Hing, 2019
#
#  Contributors:
#
###############################################################################
*/

/*! \file egs_kerma.doxy
 *  \brief Documents the egs_kerma application
 *  \EM
 */

/*! \page egs_kerma egs_kerma: Kerma calculations in a volume

<ul>
<li> \ref egs_kerma_intro </li>
<li> \ref egs_kerma_geometry </li>
<li> \ref egs_kerma_sources </li>
<li> \ref egs_kerma_options </li>
<ul>
<li> \ref egs_kerma_calculation </li>
 <li> \ref egs_kerma_FD </li>
 <li> \ref egs_kerma_fluence </li>
</ul>
<li> \ref egs_kerma_output </li>
<li> \ref common_mc </li>
<li> \ref egs_kerma_usage </li>
<li> \ref egs_kerma_example </li>
</ul>

\section egs_kerma_intro Introduction

The C++ application \c egs_kerma is an advanced EGSnrc application whose
main goal is the estimation of kerma in a volume defined by one or
more geometrical regions by means of a track-length estimator.
The efficiency of the calculation can be increased by several orders
of magnitude by using the variance reduction technique (VRT) known as
\ref egs_kerma_FD "forced detection" (FD). It can also be used for estimating the total and
differential photon fluence in the scoring volume.

This code is by no means in its final stage. It is still very experimental
and it has been cleaned up for release in the hope it will be useful
to EGSnrc users. A number of collaborators have been using it for some time and
have helped with their comments and bug reporting.

\section egs_kerma_geometry Geometries

Geometries are specified in an input file as explained in
the \ref Geometry "geometry module". Besides the simulation geometry, a geometry
should be defined that encompasses all scoring regions to be able to take advantage
of the \ref egs_kerma_FD "FD" VRT.

\section egs_kerma_sources Particle source definition

Any source from the \c egs++ \link Sources particle sources module\endlink can be used. Here is an example for
an isotropic point source of 40 keV photons placed at 100 cm on the negative z-axis:

\verbatim
:start source:
  library = egs_isotropic_source
  name = the_source
  :start shape:
    type = point
    position = 0, 0, -100
  :stop shape:
  :start spectrum:
    type = monoenergetic
    energy = .04
  :stop spectrum:
  charge = 0
:stop source:
\endverbatim

<b>BEWARE:</b> No check is made for the charge of the initial particles.
Although kerma is only defined for neutral particles such as photons and neutrons,
one could potentially want to calculate kerma for secondary neutral particles
generated by charged particles.

\section egs_kerma_options Scoring options input block

Kerma in the scoring volume can be calculated
for several geometries at once. Hence a correlated scoring
of kerma ratios can be requested by linking any combination of
two calculation geometries. In cases of small differences between
these geometries, the kerma ratios will be strongly correlated,
resulting in a significant reduction of the variance.
Correlated scoring is requested by assigning two geometry names to
the <b><code>correlated geometries</code></b> key.
A pseudo input block of such an input is shown below:

\verbatim
:start scoring options:

    :start calculation geometry:
        geometry name  = name_1
        cavity regions = list_of_cavity_region_indices
        cavity mass    = total cavity mass in gram
        excluded regions = list_of_regions # exclude particles touching these regions
    :stop calculation geometry:
    :start calculation geometry:
        geometry name  = name_1
        cavity regions = list_of_cavity_region_indices
        cavity mass    = total cavity mass in gram
        excluded regions = list_of_regions
    :stop calculation geometry:
    :start calculation geometry:
        geometry name  = name_2
        ...
    :stop calculation geometry:
    ...
    :start calculation geometry:
        geometry name  = name_n
        ...
    :stop calculation geometry:

    correlated geometries = name_i name_j
    ...
    correlated geometries = name_k name_l

    ############################################
    # Fluence scoring requested in this block
    # Common to all calculation geometries
    ############################################
    :start fluence scoring:
        minimum energy = Emin
        maximum energy = Emax
        number of bins = N
        scale          = linear # linear or logarithmic
    :stop fluence scoring:

    ######################################
    # E*muen file, it could also be E*mutr
    ######################################
    emuen file = absolute_file_name

    ########################################################
    # Geometry for forced-detection, if omitted, an analog
    # scoring used.
    ########################################################
    cavity geometry = cavity # For forced detection

:stop scoring options:
\endverbatim

The meaning of the various keys defining a calculation geometry should
be self explanatory. The reason one must specify the cavity mass is that
due to the generality of the geometry package it is not possible to
automatically compute the cavity volume and therefore the user must supply
this information for proper normalization. Geometrical regions spanning the
scoring volume (cavity) are provided via the
<b><code>cavity regions</code></b> key. If no valid region is entered or
this input is ignored, no kerma to the cavity of the calculation geometry
is calculated.

\section egs_kerma_calculation Kerma scoring

Kerma calculations require a file containing pairs of energy \f$ E \f$ and
\f$ E \times \frac{\mu_{en}}{\rho} \f$ values for the medium of interest.
This allows a faster evaluation of the
summation over all contributing particles by saving the multiplication operation.
The full name (absolute path) of this file <b>must</b> be provided using the
<b><code>emuen file</code></b> key as shown in the above example.

Kerma for medium \f$m\f$, \f$K_m\f$ is computed by summing up the individual contributions
of N photons crossing the scoring volume \f$V\f$ using the expression

\f[
K_m=\sum_{i=1}^{N} w_i \cdot \frac{l_i}{V} \cdot E_i \cdot
\left(\frac{\mu_\mathrm{en}}{\rho}\right)_i^m
\f]

The example file <em>emuen_icru90_1.5MeV.data</em> contains \f$ E \times \frac{\mu_{en}}{\rho} \f$
values for air on a logarithmic energy scale from 1 keV up to 1.5 MeV. These values
were calculated with the <em>g</em> application using the following (non-default)
transport parameters:

\verbatim
##############################
 :Start MC Transport Parameter:

 Global ECUT=                    0.512
 Global PCUT=                    0.001

 Photon cross sections  = mcdf-xcom # XCOM with renormalized PE xsections
 Pair cross sections = nrc
 Triplet production = On
 Radiative Compton corrections = ON

 Brems cross sections= nrc
 Electron Impact Ionization= penelope # Could be also ik

 :Stop MC Transport Parameter:
 #############################
 \endverbatim

This file is distributed with <em>egs_kerma</em> in the same folder.

\section egs_kerma_FD Variance reduction: Forced Detection

If the user provides the name of a defined geometry encompassing all scoring regions,
then a variance reduction technique known as <em>forced detection</em> can be used
which increases the calculation efficiency by about 3 orders of magnitude compared
to an analog calculation. The name of such a geometry should be provided to the
application via the key <b><code>cavity geometry</code></b> in the
<b><code>scoring options</code></b> input block.
If no such geometry is provided, kerma is calculated in an analog manner,
\em i.e. by scoring every time a photon crosses the scoring volume.

The usual approach to compute kerma \f$K_m\f$ for medium \f$m\f$ is to score the individual
contributions from photons crossing the scoring region. This approach is already several
times more efficient than using the kerma approximation where a full simulation of
all photon interactions is performed assuming electrons deposit their energy on the spot.
One can go one step further and estimate the contribution to kerma from any photon
that could potentially cross the scoring region due to its direction. An algorithm
to determine whether the direction of the photon intercepts with the scoring region
 needs to be implemented, as well as a ray-tracing algorithm to account for the attenuation
through the geometry. This way, one does not have to wait until the photon reaches
the scoring region to estimate its contribution to the kerma and a more efficient
sampling of all possible contributions is achieved. This approach is equivalent to
running N separate MC simulations where in the \f$ k^{th} \f$ simulation, only the contribution
to the kerma from particles interacting \f$k-1\f$ times is scored. After running all these
simulations, they can be added together to obtain the total kerma.

Kerma to medium \f$m\f$ is computed by adding up the contribution
from all photons aimed at the <b><code>cavity geometry</code></b> using the expression

\f[
K_m=\sum_{i=1}^{N} w_i \cdot \frac{l_i}{V} \cdot E_i \cdot
\left(\frac{\mu_\mathrm{en}}{\rho}\right)_i^m \cdot
e^{- \sum_{j=1}^{N_j} \mu_{ij} \cdot l_{ij}}
\f]

with \f$N_j\f$ the number of regions crossed by the \f$ i^\mathrm{th}\f$ photon,
\f$\mu_{ij}\f$ the attenuation coefficient in region \f$j\f$ and \f$l_{ij}\f$
the path across region \f$j\f$.

\section egs_kerma_fluence Fluence scoring

A photon fluence calculation can be requested using the following input block:

\verbatim
:start scoring options:
    ...
    :start fluence scoring:
        minimum energy = Emin
        maximum energy = Emax
        number of bins = N
        scale          = linear, logarithmic
    :stop fluence scoring:
:stop scoring options:
\endverbatim

Differential fluence \f$ \phi_j \f$ is calculated by scoring the volume-averaged
track length for particles with energies E between \f$E_j\f$ and \f$E_{j+1}\f$
using Chilton's fluence concept for any sampling volume V:

\f[
\phi_j=\frac{\sum_{i=1}^{N_j} w_i \cdot l_i}{V}
\f]

where \f$\displaystyle l_i\f$ is the length of the \f$\displaystyle i^{th} \f$
particle track. The width of the energy bins is defined by \f$ E_{min} \f$,
\f$ E_{max} \f$ and the number of bins N. Total fluence \f$ \Phi \f$
is calculated as the sum over all contributions to the fluence

\f[
\Phi=\sum_{j=0}^{N-1} \phi_j
\f]

The <b><code>fluence scoring</code></b> input block can be used
to request the photon fluence spectrum in a volume \f$V\f$
defined by the <b><code>cavity regions</code></b>.

\section egs_kerma_output Output

Kerma to medium in the volume of interest for each geometry as well as kerma
ratios requested by the user are output
to an *.egslog file (batch execution) or to the screen (interactive execution).
If a fluence calculation is requested, total and differential photon fluences
are also output for each calculation geometry. Additionally,
a <a href="http://plasma-gate.weizmann.ac.il/Grace/">Grace</a> plot of
the differential fluence for all geometries is generated in a file (*.agr).

\section egs_kerma_usage Usage

As any other EGSnrc application, \c egs_kerma can be started from the command line
using
\verbatim
egs_kerma -i input_file [-p pegs_file] [-o output_file] [-b] [-s] [-P N -j i]
\endverbatim
where the arguments in square brackets are optional. With the \c -o option
one can change the name of the output files (by default \c input_file.xxx
is used, where \c xxx is \c .egslog for the log file, \c .egsdat for the
data file, etc.). With \c -b one specifies a "batch" run, \em i.e. the
output is redirected to \c output_file.egslog. With \c -s one can force
\c egs_kerma to use a simple RCO instead of a JCF-RCO in parallel runs
specified with <code>-P N -j i</code>, where \c N is the number of parallel
jobs and \c i the job index. Note that one Unix-type systems it is easier
to use the \c exb command to submit parallel jobs
\verbatim
exb egs_kerma input_file pegs_file [p=N] [batch=pbs]
\endverbatim
where the \c batch option specifies the queuing system to be used.
If using a \em pegsless input file, then <b><code>pegs_file</code></b> must be substituted with
the keyword <em>pegsless</em>.
The EGSnrc GUI can be also used, see
see PIRS-877 for more details on running EGSnrc applications.


\section egs_kerma_example An input example: Kerma in 5 cm air sphere for 40 keV
photons

\verbatim
###############################################################################
#
#  A simple example input file for the egs_kerma C++ application.
#
#  Simulates a 40 keV isotropic photon source in a room with
#  concrete walls. Kerma and fluence inside a 5 cm radius air sphere
#  are calculated using a forced-detection technique (FD) and a track-length
#  estimator. Air sphere is in the centre of the room and the source at
#  1 m from the sphere.
#
#  NOTE 1: Material data is generated in pegsless mode. If source energy changed,
#          make sure to adjust energy cut-offs (AE, UE, AP, UP) below!
#
#  NOTE 2: Two geometries used here for ilustration purposes. Most likely
#          only one geometry is needed for kerma and fluence calculations
#
###############################################################################
#
#  Author:        Ernesto Mainegra-Hing, 2016
#
#  Contributors:
#
###############################################################################

:start geometry definition:

    ##########################
    # A 5 cm radius air cavity
    ##########################
    :start geometry:
        library   = egs_spheres
        midpoint  = 0 0 0
        radii     = 5.0
        name      = cavity
        :start media input:
            media = air
        :stop media input:
    :stop geometry:
    ##########################
    # A 8 m X 8 m X 8 m air box
    ##########################
    :start geometry:
     library  = egs_box
     box size = 800
     name    = air
     :start media input:
        media = air
     :stop media input:
    :stop geometry:
    ##########################
    # with 1 m thick concrete walls
    ##########################
    :start geometry:
     library  = egs_box
     box size = 900
     name    = walls
     :start media input:
        media = concrete
     :stop media input:
    :stop geometry:
    ##########################
    # A room with concrete walls
    ##########################
    :start geometry:
        library = egs_genvelope
        name = room
        base geometry = walls
        inscribed geometries = air
    :stop geometry:
    ##########################################################
    # Geometries below are identical.
    #
    # The purpose is to account for wall contributions
    # to the air sphere. There are several ways of
    # accomplishing this. One could just have used the same
    # geometry for both calculations, with and
    # without the sensitive regions, or have one geometry with
    # and another without the walls.
    #
    #########################################################
    # An air sphere in a room with concrete walls
    # Wall contribution not included during the
    # simulations. See block 'scoring options'
    # for more detail.
    ##########################
    :start geometry:
        library = egs_genvelope
        name = cavity_in_room_no_wall
        base geometry = room
        inscribed geometries = cavity
    :stop geometry:
    ##########################
    # An air sphere in a room with concrete walls
    # Wall contribution included during the
    # simulations. See block 'scoring options'
    # for more detail.
    ##########################
    :start geometry:
        library = egs_genvelope
        name = cavity_in_room_all
        base geometry = room
        inscribed geometries = cavity
    :stop geometry:

    simulation geometry = cavity_in_room_no_wall

:stop geometry definition:

:start source definition:
########################################### define the source:
   :start source:
     library = egs_isotropic_source
     name = the_source
     :start shape:
       type = point
       position = 0, 0, -100
     :stop shape:
     :start spectrum:
       type = monoenergetic
       energy = .04
     :stop spectrum:
     charge = 0
   :stop source:

   simulation source = the_source

:stop source definition:

##################################### Run control
:start run control:

    ncase = 1000000
    #calculation = combine

:stop run control:

##################################### Scoring options
:start scoring options:

    ###############################################
    # Using same geometry under two diff. names for
    # easier bookeeping.
    ###############################################
    :start calculation geometry:
        geometry name = cavity_in_room_no_wall
        cavity regions = 2
        excluded regions = 0 # exclude particles passing through these regions
        cavity mass = 0.630831804841 # 5 cm radius air sphere
    :stop calculation geometry:
    :start calculation geometry:
        geometry name = cavity_in_room_all
        cavity regions = 2
        #excluded regions = 0 # exclude particles passing through these regions
        cavity mass = 0.630831804841 # 5 cm radius air sphere
    :stop calculation geometry:

    # Ratio estimates wall contribution to air sphere
    correlated geometries = cavity_in_room_all cavity_in_room_no_wall

    ############################################
    # Fluence scoring requested in this block
    # Common to all calculation geometries
    ############################################
    :start fluence scoring:
       minimum energy = 0.0
       maximum energy = 0.040
       number of bins = 400
       scale          = linear
    :stop fluence scoring:

    ######################################
    # E*muen file, it could also be E*mutr
    #
    # Replace $EGS_HOME with the actual path!
    ######################################
    emuen file = $EGS_HOME/egs_kerma/emuen_icru90_1.5MeV.data

    ########################################################
    # Geometry for forced-detection, if omitted, an analog
    # scoring used.
    ########################################################
    cavity geometry = cavity # For forced detection

:stop scoring options:

###################################### Transport parameters
:start MC transport parameter:
      # You can include here any of the transport parameter options
      # understood by EGSnrc

  Global ECUT= 2000. # No electron transport
  Photon cross sections = mcdf-xcom # XCOM with renormalized PE xsections

:stop MC transport parameter:

#####################
# Pegsless operation.
#####################
:start media definition:

    ### energy transport cutoffs
    ae = 0.512
    ue = 0.555
    ap = 0.001
    up = 0.045

    :start air:
        rho                         = 0.00120479
        elements                    = C, N, O, AR
        mass fractions              = 0.000124, 0.755267, 0.231781, 0.012827
        density correction file     = air_dry_nearsealevel
        gas pressure                = 1.0
        bremsstrahlung correction   = NRC
    :stop air:

    :start concrete:
        rho                         = 2.3
        elements                    = H, C, O, NA, MG, AL, SI, K, CA, FE
        mass fractions              = 0.022099,0.002484,0.574930,0.015208,0.001266,0.019953,0.304627,0.010045 ,0.042952,0.006435
        density correction file     = concrete_ordinary
        bremsstrahlung correction   = NRC
    :stop concrete:

:stop media definition:
\endverbatim
*/
